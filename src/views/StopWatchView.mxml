<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx"
		viewActivate="onActivate(event)"
		viewDeactivate="onDeactivate(event)"
		>
	<s:states>
		<s:State name="State1"/>
		<s:State name="started"/>
		<s:State name="stopped"/>
	</s:states>
	<fx:Declarations>
		 
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.utils.getTimer;
			
			import model.TimeAmount;
			
			import spark.events.ViewNavigatorEvent;
			import spark.managers.PersistenceManager;
			
			protected var timer:Timer;
			protected var amount:TimeAmount;
			protected var count:int=0;
			protected var pm:PersistenceManager;
			
			protected function onActivate(event:ViewNavigatorEvent):void{
				amount = new TimeAmount();
				timer = new Timer(1000,0);
				timer.addEventListener(TimerEvent.TIMER, onTimer);
			}
			
			protected function onDeactivate(event:ViewNavigatorEvent):void
			{
				timer.stop();
				timer.removeEventListener(TimerEvent.TIMER, onTimer);
				timer = null;
			}
			
			protected function onTimer(event:TimerEvent = null):void{
				amount.increment();
				timerLabel.text = amount.FormattedTime;
				trace('count: ' + amount.totalseconds);
			}
			protected function onFirstStart():void{
				onStart();
			}
			protected function onStart():void{
				currentState='started'
				timer.start();
			}
			protected function onStop():void{
				currentState='stopped'
				timer.stop();
			}
			protected function onReset():void{
				currentState=''
				amount.reset();
				timerLabel.text ="00:00:00"
				timer.reset();
			}
			
		]]>
	</fx:Script>
	<s:Label id="timerLabel" styleName="timeDisplay" horizontalCenter="0" verticalCenter="-40" text="00:00:00" />
	<s:VGroup horizontalCenter="0" verticalCenter="20" verticalCenter.stopped="46">
		<s:Button 
			label="START"
			label.started="STOP" 
			label.stopped="START" 
			click.stopped="onStart()"
			click.started="onStop()"
			click.State1="onFirstStart()"
			
			width="120" 
			height="45"/>
		<s:Button includeIn="stopped" width="120" height="45" label="RESET"
				  click="onReset()"/>
	</s:VGroup>
	
</s:View>
